#include <bits/stdc++.h>
using namespace std;
 
struct Node {
    int key;
    Node* left, *right;
};

bool check(vector<int> v){
    int n = v.size();
    int e = n/2+1 , s=0;
    
    cout<<endl;
    
    while(s<n/2){
        if(v[s++] != v[e++]){
            return false;
        }
    }
    
    return true;
}

bool isSymmetric(Node* root) {
        //your code goes here
        queue<Node*> q;
        q.push(root);
        q.push(NULL);
        
        vector<int> v;
        
        while(!q.empty()){
            Node *temp = q.front();
            
            if(temp){
                
                if(temp->left){
                    q.push(temp->left);
                }
                
                if(temp->right){
                    q.push(temp->right);
                }
                
                v.push_back(temp->key);
                q.pop();
            }
            
            else{
                q.pop();
                
                if(!q.empty()){
                    q.push(NULL);
                    
                    if(!check(v)){
                        return false;
                    }
                    
                    v.clear();
                }
            }
        }
        
        return true;
}
